name: Django CI

on:
  push:
    branches: [ dev, dev_1 ]
  pull_request:
    branches: [ dev, dev_1 ]

jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 3
      matrix:
        python-version: [3.0]

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: zergling
          MYSQL_DATABASE: mysql
        ports: ['3306:3306']

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Migrations
      run: python manage.py migrate
      env: 
        DBENGINE: django.db.backends.mysql
        DATABASE_NAME: mysql
        DATABASE_USER: root
        DATABASE_PASSWORD: zergling
        DATABASE_HOST: 127.0.0.1
        DBPORT: $
    - name: Run Tests
      run: |
        python manage.py test
      env: 
        DBENGINE: django.db.backends.mysql
        DATABASE_NAME: mysql
        DATABASE_USER: root
        DATABASE_PASSWORD: zergling
        DATABASE_HOST: 127.0.0.1
        DBPORT: $
        EMAIL_HOST_PASSWORD: ${{secrets.EMAIL_HOST_PASSWORD}}
        EMAIL_HOST_USER: ${{secrets.MAIL_SECRET}}
  build:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v2
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
  package-job: # package job for building and publishing docker images
    runs-on: ubuntu-latest
    needs: [build] # will be fired if and only if build is passed.
    steps:
      - name: Checkout Code # checking out code.
        uses: actions/checkout@v2
      - name: Build & Publish Image # we are using a public GitHub Action to build and publish docker image to our GCR registry.
        uses: docker/build-push-action@v1
        env:
          app_name: app
        with:
        
          username: _json_key # default for gcr.io
          password: test # service account file to be set as secret
          registry: gcr.io # gcr registry domain
          repository: ${{secrets.GKE_PROJECT}}/github-django-actions/app # GKE_PROJECT is out GCP Project id to be set as secret.
          tag_with_sha: true # this will tag our image with commit id. For example our image our be gcr.io/project-id/github-django-actions/app:sha-7865423 where 7865423 is the short sha of our commit.

